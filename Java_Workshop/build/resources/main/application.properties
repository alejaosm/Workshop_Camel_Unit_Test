#Camel
camel.springboot.name = ${APPLICATION_NAME:ApplicationName}-Context
camel.springboot.main-run-controller=true
management.endpoints.web.exposure.include=health,info,env,prometheus,metrics,httptrace,threaddump,heapdump,springmetrics,hawtio,jolokia
management.endpoint.health.probes.enabled = true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
server.port=${SERVER_PORT:8080}

# Hawtio
management.endpoints.web.path-mapping.hawtio=hawtio/console
hawtio.authenticationEnabled=false

#Variables camel SSL
camel.ssl.config.cert-alias=${KEY_CERT_ALIAS:depositsservices.ambientesbc.lab}
camel.ssl.config.key-managers.key-password=${KEY_PASSWORD:d0c7aaca-deposits}
camel.ssl.config.key-managers.key-store.resource=file:/${KEY_PATH:${user.dir}/src/main/resources/keys/deposits.jks}
camel.ssl.config.key-managers.key-store.password=${KEY_PASSWORD:d0c7aaca-deposits}
camel.ssl.config.key-managers.key-store.type=jks
camel.ssl.config.server-parameters.client-authentication=REQUIRE
camel.ssl.config.trust-managers.key-store.resource=file:/${KEY_PATH:${user.dir}/src/main/resources/keys/deposits.jks}
camel.ssl.config.trust-managers.key-store.password=${KEY_PASSWORD:d0c7aaca-deposits}
#JKS
key-store.password=${KEY_STORE_PASSWORD:d0c7aaca-deposits}
key-managers.key-store.resource=${KEY_PATH:${user.dir}/src/main/resources/keys/deposits.jks}
camel.component.netty-http.use-global-ssl-context-parameters=true

#Prometheus
management.metrics.tags.application=${APPLICATION_NAME:ApplicationName}_Camel
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=1ms
management.metrics.export.prometheus.descriptions=true
management.endpoint.prometheus.enabled=true

#RestConfiguration
restconfig.component=${INTERNAL_HTTP_COMPONENT:netty-http}
restconfig.cors.enabled=${INTERNAL_HTTP_CORS:true}
restconfig.client.request.validation=${INTERNAL_HTTP_CLI_REQ_VAL:true}
restconfig.host=${INTERNAL_HTTP_HOST:0.0.0.0}
restconfig.port=${INTERNAL_HTTP_PORT:8081}
restconfig.api-property.title=${INTERNAL_HTTP_PROPERTY_TITLE:Api title}
restconfig.api-property.version=${INTERNAL_HTTP_PROPERTY_VERSION:Api version}


#IA APIC
#APIC CREDIT & DEBIT CARD
service.internal.ia-api-connect.config.client-id=${IA_CLIENT_ID:354678906655}
service.internal.ia-api-connect.config.client-secret=${IA_CLIENT_SECRET:1c5562a68ca2a7a}
uri.credit.card=${API_CREDIT_CARD:http://api-benchmark-capa-transaccional-lab.apps.ocpdes.ambientesbc.lab/v1/workshop/credit-cards/cardholder/retrieve}
uri.debit.card=${API_DEBIT_CARD:http://api-benchmark-capa-transaccional-lab.apps.ocpdes.ambientesbc.lab/v1/workshop/debit-cards/cardholder/retrieve}

api.approval=${API_RETRIEVE_APPROVAL:http://api-benchmark-capa-transaccional-lab.apps.ocpdes.ambientesbc.lab/v1/workshop/products/preapproval}